# Shebang. Executing bash via /usr/bin/env makes scripts more portable.
snippet #!
	#!/usr/bin/env sh

snippet s#!
	#!/usr/bin/env sh
	set -euo pipefail

snippet safe
	set -euo pipefail

snippet bash
	#!/usr/bin/env bash

snippet sbash
	#!/usr/bin/env bash
	set -euo pipefail
	IFS=$'\n\t'

snippet if
	if [[ ${1:condition} ]]; then
		${0:${VISUAL}}
	fi
snippet elif
	elif [[ ${1:condition} ]]; then
		${0:${VISUAL}}
snippet for
	for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
		${0:${VISUAL}}
	done
snippet fori
	for ${1:needle} in ${2:haystack} ; do
		${0:${VISUAL}}
	done
snippet wh
	while [[ ${1:condition} ]]; do
		${0:${VISUAL}}
	done
snippet until
	until [[ ${1:condition} ]]; do
		${0:${VISUAL}}
	done
snippet case
	case ${1:word} in
		${2:pattern})
			${0};;
	esac
snippet go
	while getopts '${1:o}' ${2:opts}
	do
		case $$2 in
		${3:o0})
			${0:#staments};;
		esac
	done
# Set SCRIPT_DIR variable to directory script is located.
snippet sdir
	SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# getopt
snippet getopt
	#-----------------------------------------------------------------------
	#  Handle command line arguments
	#-----------------------------------------------------------------------
	usage ()
	{
		echo "Usage :  $${0:0} [options] [--]

	    Options:
	    -h|--help          Display this message
	    -b|--book-names    Display script version

		example:
			\$0 --book-names foo bar"

	}    # ----------  end of function usage  ----------


	#-----------------------------------------------------------------------
	#  Handle command line arguments
	#-----------------------------------------------------------------------
	getOptions()
	{
		SHORT=hb:
		LONG=help,book-names:

		OPTS=$(getopt --options $SHORT --long $LONG --name "\$0" -- "$@")

		if [ $? != 0 ] ; then echo "Failed to parse options...exiting." >&2 ; exit 1 ; fi
		eval set -- "$@ --"


		while true ; do
			case "\$1" in
			-b | --booknames )
				BOOKS=("\$2")
				shift 2

				arg=\$1
				while [ "1" -le "$#" ] && [ "${arg:0:1}" != "-" ]; do
					BOOKS+=("\$1")
					shift 1
					arg=\$1
				done

				for book in "${BOOKS[@]}"; do
					echo $book
				done
				;;

			-h | --help )
				usage
				exit 0
				;;

			-- )
				shift
				break
				;;

			*)
				echo "Internal error!"
				exit 1
				;;
			esac
		done
	}

	getOptions "\$@"
snippet root
	if [ \$(id -u) -ne 0 ]; then exec sudo \$0; fi

snippet fun-sh
	${1:function_name}() {
		${0:#function_body}
	}

snippet fun
	function ${1:function_name}() {
		${0:#function_body}
	}

snippet color
	CYAN="\033[0;96m"
	CYAN_BOLD="\033[1;96m"
	GREEN="\033[0;32m"
	GREEN_BOLD="\033[1;32m"
	YELLOW="\033[0;33m"
	YELLOW_BOLD="\033[1;33m"
	RED="\033[0;31m"
	RED_BOLD="\033[1;31m"
	NC="\033[0m"

	echo -e ${GREEN}"\n ---------- $(basename $BASH_SOURCE) ----------\n"${NC}

snippet issourced
	if [ "$(basename -- "\$0")" = "$(basename $BASH_SOURCE)" ]; then
		 echo -e ${RED}"\nThis script has to be sourced, not run.\n"${RESET} >&2
		 exit 1
	fi

